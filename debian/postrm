#!/bin/sh
# postrm script for ptv-server
#
# see: dh_installdeb(1)

set -e

PACKAGENAME="ptv-server"

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    purge)
    if [ -d "/var/lib/private/${PACKAGENAME}" ]; then
        # remove all dir
        rm -rf /var/lib/private/${PACKAGENAME}
    fi        
    ;;
    remove)
    if [ -d "/var/lib/private/${PACKAGENAME}" ]; then
        #inst_path=readlink -f /var/lib/ptv3
        # remove python cache
        find /var/lib/private/${PACKAGENAME} -name '*.pyc' -delete
        #find ${inst_path}/user -name '*.pyc' -delete
        # remove ptv3 cache
        rm -rf /var/lib/private/${PACKAGENAME}/cache
        # remove ptv3 logo
        rm -rf /var/lib/private/${PACKAGENAME}/logo
        # remove ptv3 arh
        rm -rf /var/lib/private/${PACKAGENAME}/arh
        # remove ptv3 serv
        rm -rf /var/lib/private/${PACKAGENAME}/serv
    fi
    ;;
	upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
	;;
    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
